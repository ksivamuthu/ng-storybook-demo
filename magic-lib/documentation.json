{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "MagicLibService",
            "id": "injectable-MagicLibService-756829ac44cfa70d56e404fb69de10cb",
            "file": "projects/magic-lib/src/lib/magic-lib.service.ts",
            "properties": [],
            "methods": [],
            "description": "",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MagicLibService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-07836d6cad6e689bb2d94c377a89e776",
            "file": "projects/magic-lib/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "magic-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter()",
                    "line": 12,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14
                },
                {
                    "name": "onclick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'magic-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent implements OnInit {\n\n  @Input() text: string;\n\n  @Output() click: EventEmitter<void> = new EventEmitter();\n\n  ngOnInit() {\n  }\n\n  onclick() {\n    this.click.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-shine {\n  position: relative;\n  margin: 0;\n  padding: 5px 12px;\n  height: 45px;\n  outline: none;\n  text-decoration: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  background-color: #ffffff;\n  border: 1px solid rgba(22, 76, 167, 0.6);\n  border-radius: 10px;\n  color: #1d89ff;\n  font-weight: 400;\n  font-size: 20px;\n  z-index: 0;\n  overflow: hidden;\n  transition: all 0.3s cubic-bezier(0.02, 0.01, 0.47, 1);\n  span {\n    color: #164ca7;\n    font-size: 12px;\n    font-weight: 500;\n    letter-spacing: 0.7px;\n  }\n  &:hover {\n    animation: rotate 0.7s ease-in-out both;\n    span {\n      animation: storm 0.7s ease-in-out both;\n      animation-delay: 0.06s;\n    }\n  }\n}\n\n@keyframes rotate {\n  0% {\n    transform: rotate(0deg) translate3d(0, 0, 0);\n  }\n  25% {\n    transform: rotate(3deg) translate3d(0, 0, 0);\n  }\n  50% {\n    transform: rotate(-3deg) translate3d(0, 0, 0);\n  }\n  75% {\n    transform: rotate(1deg) translate3d(0, 0, 0);\n  }\n  100% {\n    transform: rotate(0deg) translate3d(0, 0, 0);\n  }\n}\n@keyframes storm {\n  0% {\n    transform: translate3d(0, 0, 0) translateZ(0);\n  }\n  25% {\n    transform: translate3d(4px, 0, 0) translateZ(0);\n  }\n  50% {\n    transform: translate3d(-3px, 0, 0) translateZ(0);\n  }\n  75% {\n    transform: translate3d(2px, 0, 0) translateZ(0);\n  }\n  100% {\n    transform: translate3d(0, 0, 0) translateZ(0);\n  }\n}\n\n.btn-shine {\n  border: 1px solid;\n  overflow: hidden;\n  position: relative;\n  span {\n    z-index: 20;\n  }\n  &:after {\n    background: #38ef7d;\n    content: \"\";\n    height: 155px;\n    left: -75px;\n    opacity: .4;\n    position: absolute;\n    top: -50px;\n    transform: rotate(35deg);\n    transition: all 550ms cubic-bezier(0.19, 1, 0.22, 1);\n    width: 50px;\n    z-index: -10;\n  }\n  &:hover {\n    &:after {\n      left: 120%;\n      transition: all 550ms cubic-bezier(0.19, 1, 0.22, 1);\n    }\n  }\n}\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class='btn-shine' (click)=\"onclick()\">\n  {{text}}\n</button>\n"
        },
        {
            "name": "CardComponent",
            "id": "component-CardComponent-ecc28567a2f50452fac2a180db657f3e",
            "file": "projects/magic-lib/src/lib/card/card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "magic-card",
            "styleUrls": [
                "./card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonText",
                    "defaultValue": "'Click me'",
                    "line": 12,
                    "type": "string"
                },
                {
                    "name": "image",
                    "line": 9,
                    "type": "string"
                },
                {
                    "name": "message",
                    "line": 11,
                    "type": "string"
                },
                {
                    "name": "title",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "click",
                    "defaultValue": "new EventEmitter()",
                    "line": 14,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16
                },
                {
                    "name": "onclick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'magic-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() image: string;\n  @Input() title: string;\n  @Input() message: string;\n  @Input() buttonText: string = 'Click me';\n\n  @Output() click: EventEmitter<void> = new EventEmitter();\n\n  ngOnInit(): void {\n  }\n\n  onclick() {\n    this.click.emit();\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".my-card {\n  max-width: 400px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),\n    0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n\n  .image-container {\n    width: 100%;\n    height: 200px;\n    overflow: hidden;\n    .image {\n      width: 100%;\n    }\n  }\n\n  .body {\n    padding: 24px;\n  }\n  .title {\n    margin: 0 0 0 0;\n    padding: 0;\n  }\n  .content {\n    margin: 24px 0 0 0;\n    text-align: justify;\n  }\n\n  .button-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-end;\n    margin: 24px 0 0 0;\n  }\n\n  .button {\n    font-size: 14px;\n    background-color: #3f51b5;\n    color: #fff;\n    box-sizing: border-box;\n    position: relative;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    cursor: pointer;\n    outline: 0;\n    border: none;\n    -webkit-tap-highlight-color: transparent;\n    display: inline-block;\n    white-space: nowrap;\n    text-decoration: none;\n    vertical-align: baseline;\n    text-align: center;\n    margin: 0;\n    min-width: 64px;\n    line-height: 36px;\n    padding: 0 16px;\n    border-radius: 4px;\n    overflow: visible;\n    transform: translate3d(0, 0, 0);\n    transition: background 0.4s cubic-bezier(0.25, 0.8, 0.25, 1),\n      box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n}\n",
                    "styleUrl": "./card.component.scss"
                }
            ],
            "stylesData": "",
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"my-card\">\n  <div class=\"body\">\n    <h2 class=\"title\">{{ title }}</h2>\n    <div class=\"content\">\n      {{ message }}\n    </div>\n    <div class=\"button-container\">\n      <div>\n        <button *ngIf=\"buttonText\" class=\"button\" (click)=\"onclick()\">{{buttonText}}</button>\n      </div>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "MagicLibComponent",
            "id": "component-MagicLibComponent-8d583791f7e4dc972d6fc21cf8a60d11",
            "file": "projects/magic-lib/src/lib/magic-lib.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "magic-magic-lib",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  magic-lib works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17
                }
            ],
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'magic-magic-lib',\n  template: `\n    <p>\n      magic-lib works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class MagicLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        }
    ],
    "modules": [
        {
            "name": "MagicLibModule",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "CardComponent"
                        },
                        {
                            "name": "MagicLibComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "MagicLibComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": [],
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/magic-lib/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/magic-lib/src/lib/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/magic-lib/src/lib/magic-lib.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MagicLibComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/magic-lib/src/lib/magic-lib.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "MagicLibService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}